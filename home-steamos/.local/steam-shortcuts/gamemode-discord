#!/usr/bin/env bash
# my-dotfiles | Copyright (C) 2023-2024 eth-p
# Repository: https://github.com/eth-p/my-dotfiles
# =============================================================================
#
# Warning
# -------
#
#    This script is meant to run on a Steam Deck!
#    DO NOT INSTALL IT ON OTHER SYSTEMS.
#
# Summary
# -------
#
#    A wrapper around the Flatpak version of Discord.
#
#    This script aims to achieve a couple of different goals:
#
#      1. It prevents Steam from becoming stuck when trying to exit Discord.
#         This is achieved by both disabling the "minimize to tray" option
#         before launching Discord, and by propagating the SIGINT signal
#         to ALL Discord processes.
#
#      2. It sets the window bounds of Discord to match the Steam Deck's
#         resolution, allowing it to use the full viewport under game mode.
#
# =============================================================================
set -euo pipefail

# Config
FLATPAK_ID="com.discordapp.Discord"
DISCORD_CONFIG_DIR="$HOME/.var/app/${FLATPAK_ID}/config/discord"
DISCORD_SETTINGS_JSON="${DISCORD_CONFIG_DIR}/settings.json"
DISCORD_BOUNDS=0,0,1280,800

# Functions
discord_running() {
	flatpak ps --columns=application | grep "$FLATPAK_ID" &>/dev/null || return 1
	return 0
}

discord_pids() {
	flatpak ps --columns=application,pid \
		| awk -v id="$FLATPAK_ID" '$1==id { print $2 }' \
		| sort -u
}

discord_wait() {
	local pids
	pids="$(discord_pids)"

	echo "==> Waiting for Discord to close."
	while [[ "${#pids}" -gt 0 ]]; do
		if ! discord_pids | xargs kill -0 2>/dev/null; then
			pids="$(discord_pids)"
		fi
		sleep 1
	done
}

discord_launch() {
	local bound_x bound_y bound_width bound_height
	IFS=',' read -r bound_x bound_y bound_width bound_height <<< "$DISCORD_BOUNDS"

	echo "==> Rewriting Discord window size to Steam Deck resolution."
	echo "==> Also disabling minimize to tray option."
	mv "${DISCORD_SETTINGS_JSON}" "${DISCORD_SETTINGS_JSON}.old"
	jq '.WINDOW_BOUNDS.x = ($BOUND_X | tonumber)
		| .WINDOW_BOUNDS.y = ($BOUND_Y | tonumber)
		| .WINDOW_BOUNDS.width = ($BOUND_WIDTH | tonumber)
		| .WINDOW_BOUNDS.height = ($BOUND_HEIGHT | tonumber)
		| .IS_MAXIMIZED = true
		| .MINIMIZE_TO_TRAY = false' \
		"${DISCORD_SETTINGS_JSON}.old" \
		--arg BOUND_X "$bound_x" \
		--arg BOUND_Y "$bound_y" \
		--arg BOUND_WIDTH "$bound_width" \
		--arg BOUND_HEIGHT "$bound_height" \
		> "$DISCORD_SETTINGS_JSON"

	({
		flatpak run "$FLATPAK_ID" 2>&1 \
			| sed 's/^/| /'
	}) &
}

discord_exit() {
	echo "==> Received signal to close Discord."
	flatpak kill "$FLATPAK_ID"
}

cleanup() {
	if [[ -f "${DISCORD_SETTINGS_JSON}.old" ]]; then
		mv "${DISCORD_SETTINGS_JSON}.old" "${DISCORD_SETTINGS_JSON}"
	fi
}

# Main
if [[ -n "$(discord_pids)" ]]; then
	echo "error: Discord is already running"
	exit 1
fi

trap 'cleanup' EXIT
trap 'discord_exit' INT HUP TERM
discord_launch && sleep 5
discord_wait
