# my-dotfiles | Copyright (C) 2021-2022 eth-p
# Repository: https://github.com/eth-p/my-dotfiles
# =============================================================================
#
# Summary
# -------
#
#   Custom key bindings for improving my quality-of-life while using tmux.
#
#
# How it's used in my-dotfiles
# ----------------------------
#
#   This is used to provide my custom key bindings.
#
# =============================================================================

# Use C-a instead of C-b.
unbind C-b
set -g prefix C-a
bind C-a send-prefix

if-shell -F "$SSH_TMUX" {
	unbind C-a
	set -g prefix C-b
	bind C-b send-prefix
}

# Unbind C-q.
unbind C-q

# Make pane split bindings make sense.
#
#   If integrations are enabled, we should use the tmuxnew-window script to
#   allow fish to copy variables between shell sessions.
unbind '"'
unbind %

if-shell -F "#{ETHP_INTEGRATION}" {
	bind | run-shell -b "#{E:ETHP_INTEGRATION} 'script:#{ETHP_SCRIPT}/tmux-spawn' split-window -h"
	bind - run-shell -b "#{E:ETHP_INTEGRATION} 'script:#{ETHP_SCRIPT}/tmux-spawn' split-window -v"
	bind c run-shell -b "#{E:ETHP_INTEGRATION} 'script:#{ETHP_SCRIPT}/tmux-spawn' new-window"
} {
	bind | split-window -h
	bind - split-window -v
	bind c new-window
}

# Integrations.
if-shell -F "#{ETHP_INTEGRATION}" {
	bind k run-shell -b "#{E:ETHP_INTEGRATION} clear"
	bind x run-shell -b "#{E:ETHP_INTEGRATION} exit"
	bind [ run-shell -b "#{E:ETHP_INTEGRATION} copy"
} {
	unbind k
	unbind x
	unbind [
}

# Switch panes using Alt-arrow without prefix.
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Switch windows using Alt-Shift-arrow without prefix.
bind -n M-S-Left previous-window
bind -n M-S-Right next-window

# Reload on Prefix-R.
bind r source-file ~/.config/tmux/tmux.conf


# -----------------------------------------------------------------------------
# Copy Mode
# -----------------------------------------------------------------------------

# Toggle visual selection.
bind -T copy-mode v if-shell -F "#{selection_active}" \
	'send-keys -X clear-selection' \
	'send-keys -X begin-selection'

bind -T copy-mode V if-shell -F "#{selection_active}" \
	'send-keys -X clear-selection' \
	'send-keys -X select-line'

# Copy to clipboard.
bind -T copy-mode y if-shell -F "#{selection_present}" \
	'send-keys -X copy-selection' \
	'display-message "Nothing to copy."'

bind -T copy-mode Y if-shell -F "#{selection_present}" \
	'send-keys -X copy-selection-and-cancel' \
	'display-message "Nothing to copy."'

# Use mouse to select.
bind -T copy-mode MouseDrag1Pane select-pane \; send-keys -X begin-selection
unbind -T copy-mode MouseDragEnd1Pane

# Use "/" to search.
bind -T copy-mode / command-prompt -i -I "#{pane_search_string}" \
	-p "(search down)" "send -X search-forward-incremental \"%%%\""

bind -T copy-mode ? command-prompt -i -I "#{pane_search_string}" \
	-p "(search up)" "send -X search-backward-incremental \"%%%\""

