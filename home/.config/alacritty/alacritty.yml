# my-dotfiles | Copyright (C) 2021 eth-p
# Repository: https://github.com/eth-p/my-dotfiles

window:
  padding:
    x: 4
    y: 2

font:
  size: 11
  use_thin_strokes: true

  normal:
    family: "JetBrains Mono NL"

  bold:
    family: "JetBrains Mono NL"

  italic:
    family: "JetBrains Mono NL"

  bold_italic:
    family: "JetBrains Mono NL"

scrolling:
  history: 0

colors:
  primary:
    background: '#1c1c1c'
    foreground: '#c8c8c8'
  normal:
    black:   '#1d1f21'
    red:     '#ff6188'
    green:   '#a9dc76'
    yellow:  '#ffd866'
    blue:    '#ab9df2'
    magenta: '#fc9867' # actually... orange
    cyan:    '#78dce8'
    white:   '#c5c5c5'
  bright:
    black:   '#666666'
    red:     '#ff3158'
    green:   '#79ec46'
    yellow:  '#fff836'
    blue:    '#6b6dff'
    magenta: '#ffb837' # actually... orange
    cyan:    '#38efff'
    white:   '#eaeaea'


# -----------------------------------------------------------------------------
# Shell
# -----------------------------------------------------------------------------

env:
  USER_SHELL: fish

shell:
  program: '/usr/bin/env'
  args:
  - 'bash'
  - '-c'
  - |-
    # Append to the PATH.
    PATH="/usr/local/bin:$PATH"
    if [ -d "/opt/homebrew/bin" ]; then PATH="/opt/homebrew/bin:$PATH"; fi

    # Switch the SHELL environment variable to the user's desired shell.
    export SHELL="$USER_SHELL"
    unset USER_SHELL
    SHELL_PATH="$(printf '%q' "$(which "$SHELL" 2>&1 || echo bash)")"
    SHELL_NAME="$(printf '%q' "$(basename -- "$SHELL_PATH")")"

    detached_session_count="$(tmux list-sessions -f '#{?session_attached,,1}' | wc -l)"
    if [ "${detached_session_count}" -eq 1 ]; then
      tmux attach -t "$(tmux list-sessions -f '#{?session_attached,,1}' -F '#{session_id}')" || bash
      exit 0
    fi
    
    # Start a new tmux session for tab and split support.
    SHELL="/bin/sh" tmux new-session "
      tmux unbind d;
      tmux set-option default-shell $SHELL_PATH;
      exec -a -$SHELL_NAME $SHELL_PATH
    " || bash


# -----------------------------------------------------------------------------
# Bindings
# -----------------------------------------------------------------------------

key_bindings:
  - { key: Q, mods: Control, chars: "\u0011" } # Ctrl+Q -> Ctrl+Q

  # Integrations that get forwarded to tmux.
  - { key: O, mods: Command, chars: "\x1B[24;6~o" }
  - { key: S, mods: Command, chars: "\x1B[24;6~s" }
  - { key: J, mods: Command, chars: "\x1B[24;6~j" }

  # Rebind CMD+K to use tmux.
  - { key: K, mods: Command, chars: "\u0001k" } # Clear pane.

  # Rebind CMD+C to enter tmux copy mode.
  - { key: C, mods: Command, chars: "\u0001[" }

  # Rebind CMD+N/CMD+W to use tmux.
  - { key: N, mods: Command, action: CreateNewWindow }
  - { key: T, mods: Command, chars: "\u0001c" }
  - { key: W, mods: Command, chars: "\u0001x" }

  # Rebind CMD+D/CMD+SHIFT+D to use tmux.
  - { key: D, mods: Command,       chars: "\u0001|" } # Vertical split pane.
  - { key: D, mods: Command|Shift, chars: "\u0001-" } # Horizontal split pane.

  # Rebind CMD+[number] to use tmux.
  - { key: 'Key1', mods: Command, chars: "\u00011" }
  - { key: 'Key2', mods: Command, chars: "\u00012" }
  - { key: 'Key3', mods: Command, chars: "\u00013" }
  - { key: 'Key4', mods: Command, chars: "\u00014" }
  - { key: 'Key5', mods: Command, chars: "\u00015" }
  - { key: 'Key6', mods: Command, chars: "\u00016" }
  - { key: 'Key7', mods: Command, chars: "\u00017" }
  - { key: 'Key8', mods: Command, chars: "\u00018" }
  - { key: 'Key9', mods: Command, chars: "\u00019" }

  # Rebind CMD+` to use tmux.
  - { key: Grave, mods: Command,       chars: "\u0001n" }
  - { key: Grave, mods: Command|Shift, chars: "\u0001p" }

  - { key: Grave, mods: Alt|Command,       chars: "\u0001n" } # Workaround using BTT
  - { key: Grave, mods: Alt|Command|Shift, chars: "\u0001p" } # Workaround using BTT

