#!/usr/bin/env bash
# my-dotfiles | Copyright (C) 2021 eth-p
# Repository: https://github.com/eth-p/my-dotfiles
# =============================================================================
#
# Summary
# -------
#
#   This script will try to clear the screen and scrollback buffer of the
#   target pane.
#
#   If the current program supports an integration, this will tell the
#   program to clear the screen using a key sequence. If not, it will force
#   the screen to be cleared by tmux.
#
#   Supported programs:
#
#    - fish
#
# Arguments
# ---------
#
#   $1  [--config=CONFIG_FILE]    # Optional config file.
#   $1  "--!"                     # Attestation constant.
#   $2  TMUX_SOCKET               # Path to the tmux socket.
#   $3  TMUX_PANE                 # The target tmux pane.
#   $4  TMUX_CURRENT_COMMAND      # The current command running in the pane.
#   $5  TMUX_CURRENT_TITLE        # The current title of the pane.
#
# How it's used in my-dotfiles
# ----------------------------
#
#   This is used by tmux's `C-a k` binding to clear the active pane's screen.
#   It's also indirectly used by Cmd+K in Alacritty, which sends `C-a k`.
#
# =============================================================================
set -eo pipefail

INTEGRATION_CLEAR_FISH_BINDING=('C-S-F12' 'k')

if [[ "$1" =~ --config=(.*) ]]; then
	source "${BASH_REMATCH[1]}"
	shift
fi


# -----------------------------------------------------------------------------

# Attest that it's run from inside tmux.
if [ "$1" != "--!" ]; then
	echo "$0: this script isn't meant to be run directly"
	exit 1
fi

# Collect arguments.
export TMUX="$2"
export TMUX_PANE="$3"
PANE_CURRENT_COMMAND="$4"
PANE_CURRENT_TITLE="$5"
PANE_COMMAND_NAME="$(basename -- "$PANE_CURRENT_COMMAND")"
TITLE_COMMAND_NAME="$(basename -- "$(cut -d' ' -f1 <<< "$PANE_CURRENT_TITLE")")"

# In a supported program? Clear using the program's features.
for command_name in "$PANE_COMMAND_NAME" "$TITLE_COMMAND_NAME"; do
case "$command_name" in
	fish)
		if [[ "${#INTEGRATION_CLEAR_FISH_BINDING[@]}" -ne 0 ]]; then
			tmux send-keys -t "$TMUX_PANE" "${INTEGRATION_CLEAR_FISH_BINDING[@]}"
			exit 0
		fi
		;;
	
	vi|vim|nvim|neovim)
		exit 0 # This won't end well.
		;;

	bat|less)
		exit 0 # This also won't end well.
		;;
esac
done

# Brute force method.
tmux clear-history -t "$TMUX_PANE"
tmux send-keys -t "$TMUX_PANE" -R
exit 0

