#!/usr/bin/env bash
# my-dotfiles | Copyright (C) 2021 eth-p
# Repository: https://github.com/eth-p/my-dotfiles
# =============================================================================
#
# Summary
# -------
#
#    A wrapper around the 'glow' program, with support for automatic styling
#    and the ability to disable padding.
#
#
# =============================================================================
set -euo pipefail
glow="$(which -a glow | grep -vF "$0" | head -n1)"
configdir="${XDG_CONFIG_HOME:-$HOME/.config}/glow"
args=()

opt_style=''
opt_pager=false
opt_unpadded="${GLOW_UNPADDED:-false}"
opt_width=

# Parse command arguments.
while [[ "$#" -gt 0 ]]; do
	case "$1" in
		--style|-s) opt_style="$2"; shift;;
		--width|-w) opt_width="$2"; shift;;
		--style=*)  opt_style="${1:8}";;
		--width=*)  opt_width="${1:8}";;
		-s=*)       opt_style="${1:3}";;
		-s*)        opt_style="${1:2}";;
		-w=*)       opt_width="${1:3}";;
		-w*)        opt_width="${1:2}";;
		-p|--pager) opt_pager=true;;
		--unpadded) opt_unpadded=true;;
		*)          args+=("$1");;
	esac
	shift
done

# Set the style if it hasn't been explicitly set.
use_custom_style() {
	local name="$1"
	local dir
	local stylefile

	# Look for the custom style.
	for dir in "$configdir" "${configdir}/styles"; do
		stylefile="${dir}/${name}.json"
		if [[ -f "$stylefile" ]]; then

			# If we're supposed to be using an unpadded theme, copy the style
			# and strip away the document margin.
			if [[ "$opt_unpadded" = "true" ]]; then
				stylefile_up="${dir}/${name}.unpadded.json"

				if ! [[ -f "$stylefile_up" ]]; then
					jq '.document.margin = 0 | .document.block_prefix = "" | .document.block_suffix = ""' \
						"$stylefile" > "$stylefile_up"
				fi
				
				stylefile="$stylefile_up"
			fi

			opt_style="$stylefile"
			return 0
		fi
	done

	# Could not find it.
	return 1
}

if [[ -z "$opt_style" || "$opt_style" = "auto" || "$opt_style" = "color" ]]; then
	if [[ "$opt_style" = "color" || -t 0 ]]; then
		case "${TERM_BG:-dark}" in
			dark) opt_style="dark";;
			light) opt_style="light";;
		esac
	else
		opt_style="ascii"
	fi
fi

if [[ -n "$opt_style" ]]; then
	use_custom_style "$opt_style" || true
	args=(--style="$opt_style" "${args[@]}")
fi

# Change the config file to be under ~/.config.
if [[ -f "${configdir}/glow.yml" ]]; then
	args=(--config="${configdir}/glow.yml" "${args[@]}")
fi

# Set the width if it's not specified and on a terminal.
if [[ -t 0 && -z "$opt_width" ]]; then
	SIZE=($(stty size 2>/dev/null))
	opt_width="${SIZE[1]}"
fi

if [[ -n "$opt_width" ]]; then
	args=(--width="$opt_width" "${args[@]}")
fi

# Run the real glow.
if "$opt_pager" || [[ -t 0 ]]; then
	LESS="${LESS:-} --quit-if-one-screen"
	"$glow" "${args[@]}" -p
	exit $?
else
	"$glow" "${args[@]}"
	exit $?
fi

